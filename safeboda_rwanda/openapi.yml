openapi: 3.0.3
info:
  title: SafeBoda Rwanda API
  version: "1.0.0"
servers:
  - url: http://127.0.0.1:8000
paths:
  /api/users/token/:
    post:
      tags: [Auth]
      summary: Obtain JWT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email: { type: string, format: email }
                password: { type: string, format: password }
      responses:
        "200":
          description: Tokens
          content:
            application/json:
              schema:
                type: object
                properties:
                  access: { type: string }
                  refresh: { type: string }
  /api/users/me/:
    get:
      security: [{ bearerAuth: [] }]
      tags: [Users]
      summary: Current user profile
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema: { $ref: "#/components/schemas/UserPublic" }
  /api/locations/drivers/nearby/:
    post:
      security: [{ bearerAuth: [] }]
      tags: [Locations]
      summary: Find nearby drivers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [lat, lng]
              properties:
                lat: { type: number, format: float }
                lng: { type: number, format: float }
                radius_km: { type: number, default: 3 }
                limit: { type: integer, default: 10 }
      responses:
        "200":
          description: OK
          headers:
            Cache-Control: { schema: { type: string } }
            X-Cache-Status: { schema: { type: string, enum: [HIT, MISS] } }
          content:
            application/json:
              schema:
                type: object
                properties:
                  drivers:
                    type: array
                    items: { $ref: "#/components/schemas/NearbyDriver" }
                  total_found: { type: integer }
                  search_radius: { type: number }
  /api/rides/request/:
    post:
      security: [{ bearerAuth: [] }]
      tags: [Rides]
      summary: Request a ride
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [pickup_lat, pickup_lng, dropoff_lat, dropoff_lng]
              properties:
                pickup_lat: { type: number }
                pickup_lng: { type: number }
                dropoff_lat: { type: number }
                dropoff_lng: { type: number }
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema: { $ref: "#/components/schemas/Ride" }
  /api/cache/stats/:
    get:
      security: [{ bearerAuth: [] }]
      tags: [Cache]
      summary: Cache statistics
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema: { $ref: "#/components/schemas/CacheStats" }
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    UserPublic:
      type: object
      properties:
        id: { type: integer }
        email: { type: string, format: email }
        name: { type: string }
        user_type: { type: string, enum: [admin, passenger, driver] }
    NearbyDriver:
      type: object
      properties:
        driver_id: { type: integer }
        distance_km: { type: number }
        estimated_arrival: { type: string }
        rating: { type: number }
        location:
          type: object
          properties:
            lat: { type: number }
            lng: { type: number }
    Ride:
      type: object
      properties:
        id: { type: integer }
        status: { type: string }
        rider: { type: integer }
        driver: { type: integer, nullable: true }
        pickup_lat: { type: number }
        pickup_lng: { type: number }
        dropoff_lat: { type: number }
        dropoff_lng: { type: number }
        created_at: { type: string, format: date-time }
        updated_at: { type: string, format: date-time }
    CacheStats:
      type: object
      properties:
        cache_hit_ratio: { type: number }
        total_requests: { type: integer }
        cache_hits: { type: integer }
        cache_misses: { type: integer }
        most_cached_endpoints:
          type: array
          items: { type: string }
