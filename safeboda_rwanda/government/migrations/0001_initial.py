# Generated by Django 5.2.7 on 2025-10-16 22:14

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('rides', '0002_notification_ridetracking_ride_accepted_at_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ComplianceStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('DRIVER_LICENSING', 'Driver Licensing'), ('VEHICLE_INSPECTION', 'Vehicle Inspection'), ('INSURANCE', 'Insurance Coverage'), ('SAFETY_STANDARDS', 'Safety Standards'), ('REPORTING', 'Government Reporting')], max_length=30)),
                ('compliant', models.BooleanField(default=True)),
                ('compliance_percentage', models.DecimalField(decimal_places=2, default=100.0, max_digits=5)),
                ('total_required', models.IntegerField(default=0)),
                ('total_compliant', models.IntegerField(default=0)),
                ('issues_identified', models.TextField(blank=True)),
                ('action_plan', models.TextField(blank=True)),
                ('last_audit_date', models.DateField()),
                ('next_audit_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Compliance statuses',
                'ordering': ('-last_audit_date',),
            },
        ),
        migrations.CreateModel(
            name='TaxReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('DAILY', 'Daily Report'), ('WEEKLY', 'Weekly Report'), ('MONTHLY', 'Monthly Report'), ('QUARTERLY', 'Quarterly Report')], max_length=20)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('total_rides', models.IntegerField(default=0)),
                ('total_revenue', models.DecimalField(decimal_places=2, max_digits=15)),
                ('total_tax', models.DecimalField(decimal_places=2, max_digits=15)),
                ('driver_earnings', models.DecimalField(decimal_places=2, max_digits=15)),
                ('platform_commission', models.DecimalField(decimal_places=2, max_digits=15)),
                ('report_reference', models.CharField(max_length=100, unique=True)),
                ('submitted_to_rra', models.BooleanField(default=False)),
                ('submission_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('-period_end',),
                'indexes': [models.Index(fields=['-period_end'], name='government__period__707189_idx'), models.Index(fields=['report_type', '-period_end'], name='government__report__5dbf8d_idx')],
            },
        ),
        migrations.CreateModel(
            name='EmergencyIncident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('incident_type', models.CharField(choices=[('ACCIDENT', 'Accident'), ('MEDICAL', 'Medical Emergency'), ('CRIME', 'Crime/Security Issue'), ('BREAKDOWN', 'Vehicle Breakdown'), ('OTHER', 'Other Emergency')], max_length=20)),
                ('severity', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], max_length=20)),
                ('description', models.TextField()),
                ('location_lat', models.DecimalField(decimal_places=6, max_digits=9)),
                ('location_lng', models.DecimalField(decimal_places=6, max_digits=9)),
                ('location_address', models.CharField(blank=True, max_length=255)),
                ('police_notified', models.BooleanField(default=False)),
                ('ambulance_called', models.BooleanField(default=False)),
                ('incident_reference', models.CharField(max_length=100, unique=True)),
                ('authority_response', models.TextField(blank=True)),
                ('resolved', models.BooleanField(default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reporter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reported_incidents', to=settings.AUTH_USER_MODEL)),
                ('ride', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='emergency_incidents', to='rides.ride')),
            ],
            options={
                'ordering': ('-created_at',),
                'indexes': [models.Index(fields=['-created_at'], name='government__created_3eae73_idx'), models.Index(fields=['incident_type', 'severity'], name='government__inciden_380cb3_idx'), models.Index(fields=['resolved'], name='government__resolve_7b255c_idx')],
            },
        ),
        migrations.CreateModel(
            name='GovernmentAuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_type', models.CharField(choices=[('REPORT_GENERATED', 'Report Generated'), ('DATA_EXPORTED', 'Data Exported'), ('VERIFICATION_REQUESTED', 'Verification Requested'), ('INCIDENT_REPORTED', 'Incident Reported'), ('COMPLIANCE_CHECK', 'Compliance Check')], max_length=30)),
                ('endpoint', models.CharField(max_length=200)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.CharField(blank=True, max_length=500)),
                ('request_data', models.JSONField(blank=True, default=dict)),
                ('response_status', models.IntegerField()),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='government_accesses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-timestamp',),
                'indexes': [models.Index(fields=['-timestamp'], name='government__timesta_d70e8e_idx'), models.Index(fields=['access_type', '-timestamp'], name='government__access__5173ef_idx')],
            },
        ),
        migrations.CreateModel(
            name='RTDADriverReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_number', models.CharField(max_length=50)),
                ('license_type', models.CharField(default='MOTORCYCLE', max_length=20)),
                ('verification_status', models.CharField(choices=[('PENDING', 'Pending Verification'), ('VERIFIED', 'Verified'), ('REJECTED', 'Rejected'), ('EXPIRED', 'License Expired')], default='PENDING', max_length=20)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('rtda_reference', models.CharField(blank=True, max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rtda_verifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
                'indexes': [models.Index(fields=['driver', '-created_at'], name='government__driver__0eb003_idx'), models.Index(fields=['verification_status'], name='government__verific_1a6b2f_idx')],
            },
        ),
    ]
